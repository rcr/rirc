'\" t
.TH RIRC 1 rirc\-VERSION
.SH NAME
rirc \- a minimalistic irc client written in C
.SH SYNOPSIS
\fBrirc\fR [ \fB-hv\fR ] [ \fB-s\fR \fIserver\fR [ \fB...\fR ]]
.SH DESCRIPTION
.PP
rirc is a lightweight Internet Relay Chat client.
.PP
Connections are TLS enabled over port 6697 by default.
.SH OPTIONS
.TP 5
.B "-h, --help"
Print help message and exit
.TP
.B "-v, --version"
Print rirc version and exit
.SS Server options
.TP 5
.BI "-s, --server=" server
Connect to \fIserver\fP
.TP
.BI "-p, --port=" port
Connect to \fIserver\fP using \fIport\fP
.TP
.BI "-w, --pass=" pass
Connect to \fIserver\fP using \fIpass\fP
.TP
.BI "-u, --username=" username
Connect to \fIserver\fP using \fIusername\fP
.TP
.BI "-r, --realname=" realname
Connect to \fIserver\fP using \fIrealname\fP
.TP
.BI "-n, --nicks=" nicks
Comma separated list of \fInicks\fP to use for \fIserver\fP
.TP
.BI "-c, --chans=" chans
Comma separated list of \fIchannels\fP to join for \fIserver\fP
.SS Server connection options
.TP 5
.B --ipv4
Connect to \fIserver\fP using only ipv4 addresses
.TP
.B --ipv6
Connect to \fIserver\fP using only ipv6 addresses
.TP
.B --tls-disable
Set \fIserver\fP TLS disabled, default port to 6667
.TP
.BI --tls-verify= mode
Set \fIserver\fP TLS peer certificate verification \fImode\fP:
.EX
\(bu \fIdisabled\fP - cert is not verified
\(bu \fIoptional\fP - cert is verified, handshake continues on error
\(bu \fIrequired\fP - cert is verified, handshake is aborted on error (default)
.EE
.SH USAGE
.TS
l .
rirc is controlled by a combination of key bindings and commands, where:
  <arg> denotes required arguments
  [arg] denotes optional arguments
.TE

.TS
.tab(;);
lb l .
Keys:
  ^N;go to next channel
  ^P;go to previous channel
  ^C;cancel current input/action
  ^L;clear current channel
  ^X;close current channel
  ^U;scroll current buffer up
  ^D;scroll current buffer down
  <left>;input cursor back
  <right>;input cursor forward
  <up>;input history back
  <down>;input history forward
.TE

.TS
l .
Commands beginning with ':' are interpreted as rirc commands
and control the local client, e.g.:
.TE

.TS
.tab(;);
lb l .
Commands:
  :clear;
  :close;
  :connect;
  :disconnect;
  :quit;
.TE

.TS
l .
Commands beginning with '/' are interpreted as IRC commands
and will be sent to the current server, e.g.:
.TE

.TS
.tab(;);
lb l .
IRC commands:
  /join;[target, [targets...]]
  /me;<message>
  /nick;[nick]
  /part;[target [targets...]] [part message]
  /privmsg;<target> <message>
  /quit;[quit message]
  /raw;<message>
.TE
.SH AUTHORS
.MT mail@rcr.io
Richard 'rcr' Robbins
.ME .
.SH SEE ALSO
.UR http://rcr.io/rirc/
Additional documentation
.UE .
